{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"scopeName": "source.exscript",
	"patterns": [
		{
			"include": "#codeblock"
		},
		{
			"name": "variable.other",
			"match": "\\$\\w+"
		},
		{
			"name": "comment.line.number-sign",
			"match": "^[\\t\\s]*#[^\\r\\n]+[\\r\\n]"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control",
					"match": "\\b(append|as|else|end|extract|fail|if|into|loop|to|try|from)\\b"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match": "\\b[0-9]+\\b"
				},
				{
					"name": "constant.numeric",
					"match": "\\b0x[0-9a-f]+\\b"
				},
				{
					"name": "constant.language",
					"match": "\\b(true|false)\\b"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "support.class",
					"match": "\\b(connection|sys|crypt|file|ipv4|list|mysys|string|util)\\b"
				},
				{
					"name": "support.function",
					"match": "(?<=\\.)\\w+(?=\\()"
				}
			]
		},
		"language": {
			"patterns": [
				{
					"name": "variable.language",
					"match": "\\b(__hostname__|__response__)\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "constant.language",
					"match": "\\b(in|is|not|and|or|is not|lt|lte|gt|gte|matches)\\b"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.parameter",
					"match": "\\b\\w+(?= =)\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b(?<=if )\\w+\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b(?<=loop )\\w+\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b(?<=append )\\w+\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b(?<=to )\\w+\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b(?<=lt )\\w+\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b(?<=lte )\\w+\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b(?<=gt )\\w+\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b(?<=gte )\\w+\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b\\w+(?= lt)\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b\\w+(?= lte)\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b\\w+(?= gt)\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b\\w+(?= gte)\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b(?<=as )\\w+\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b(?<=into )\\w+\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b(?<=from )\\w+\\b"
				},
				{
					"name": "variable.parameter",
					"match": "\\b((?<=, )\\w+)+\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "variable.other",
					"match": "\\$\\w+"
				}
			]
		},
		"regex": {
			"name": "string.regexp",
			"begin": "/",
			"end": "/",
			"patterns": [
				{
					"name": "constant.character.escape",
					"match": "\\\\."
				}
			]
		},
		"parentheses": {
			"begin": "\\(",
			"end": "\\)",
			"patterns": [
				{
					"include": "#strings"
				}
			]
		},
		"codeblock": {
			"begin": "\\{",
			"end": "\\}",
			"patterns": [
				{
					"include": "#constants"
				},
				{
					"include": "#keywords"
				},
				{
					"include": "#operators"
				},
				{
					"include": "#variables"
				},
				{
					"include": "#functions"
				},
				{
					"include": "#language"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#parentheses"
				},
				{
					"include": "#regex"
				}
			]
		}
	}
}